# /etc/nginx/sites-available/y-downloader.duckdns.org.conf

# If you use the "Connection $connection_upgrade" line below, ensure this map
# exists in nginx.conf inside the http{} block:
#   map $http_upgrade $connection_upgrade { default upgrade; '' close; }

server {
    listen 80;
    server_name y-downloader.duckdns.org www.y-downloader.duckdns.org;

    # Letâ€™s Encrypt HTTP-01 challenge
    location /.well-known/acme-challenge/ {
        root /var/www/html;   # must match your certbot --webroot
        allow all;
    }

    # Redirect everything else to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name y-downloader.duckdns.org www.y-downloader.duckdns.org;

    ssl_certificate     /etc/letsencrypt/live/y-downloader.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/y-downloader.duckdns.org/privkey.pem;

    # (optional hardening)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;

    # Allow large files if needed
    client_max_body_size 200M;

    location / {
        # Match your docker-compose port mapping: host 8001 -> container 8000
        proxy_pass http://127.0.0.1:8001;
        proxy_http_version 1.1;

        # WebSocket support (safe if not used)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Standard proxy headers
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
        proxy_buffering off;
    }
}